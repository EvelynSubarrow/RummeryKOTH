org 0x7C00   ; add 0x7C00 to label addresses
 bits 16      ; tell the assembler we want 16 bit code
 
   mov ax, 0  ; set up segments
   mov ds, ax
   mov es, ax
   mov ss, ax     ; setup stack
   mov sp, 0x7C00 ; stack grows downwards from 0x7C00
 
   ;mov si, welcome
   ;call print_string
   
    ; Load stage 2 to memory.
    mov ah, 0x02
    mov al, 3 ; Number of sectors to load
	;potentially unnecessary. I'll care when I start running out of space
    mov dl, 0x80
    mov ch, 0
    mov dh, 0
    mov cl, 2
    mov bx, qr
    int 0x13
	
	;mov ax, 012h ; set VESA video mode pls
	;mov bx, 0108h  ; I'd like 80x60x16(t) please
	;mov bx, 010Bh ; could I have 132x60x16(t) pls?
	;int 0x10
	
	mov bl, 0x0F ; Set colour. Useless as we've gone and dropped our video mode :c
	mov si, qr
	call print_string
	
	;put the cursor at 0,0
	mov ah, 0x02
	mov bh, 0
	mov dh, 0
	mov dl, 0
	int 0x10
	
	hlt
 
 ; ================
 ; calls start here
 ; ================
 
 print_string:
   lodsb        ; grab a byte from SI
 
   or al, al  ; logical or AL by itself
   jz .done   ; if the result is zero, get out
 
   mov ah, 0x0E
   int 0x10      ; otherwise, print out the character!
   ;cmp al, 
   jmp print_string
 
 .done:
   ret
   
 
   times 510-($-$$) db 0
   dw 0AA55h ; some BIOSes require this signature
   stage2:
   	;;mov ax, 012h ; set VESA video mode pls
	;mov bx, 0x03   ; I'd like 80x25x16, please
	;;mov bx, 010Bh ; could I have 132x60 pls?
	;;int 0x10
   
    ;;mov bl, 0x0f ;our default colour lol
	;;mov si, qr
	;;call ps16
	
	;put the cursor at 0,0
	;mov ah, 0x02
	;mov bh, 0
	;mov dh, 0
	;mov dl, 0
	;int 0x10
	
	;hlt
qr db 0x0D, 0x0A
db 0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB, '           R U M M E R Y', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB, ' braenaru       ens       goodkat', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB, ' joepie91     lysobit      tamara', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB, ' nsh       skyhighatrist      nij',0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB, 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB, ' lysobit       x47df      spoonzy', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB, 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB, '       2 6 0 0   L O N D O N', 0x0D, 0x0A
db 0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB, '          tracer    crypt', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB, 0x0D, 0x0A
db 0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB, 0x0D, 0x0A
db 0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB, 0x0D, 0x0A
db 0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB, '   The internet', 0x0D, 0x0A
db 0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB, '   The hate machine', 0x0D, 0x0A
db 0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB, '   The love machine', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB, '   The machine powered by', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB, '   many machines', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB, '   We are all part of it', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB, '   Helping it grow', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB, '   And helping it grow on us', 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB, 0x0D, 0x0A
db 0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0xDB,0xDB,0x20,0x20,0x20,0x20,0x20,0x20,0xDB,0xDB,0x20,0x20,0xDB,0xDB,0xDB,0xDB, "      -----------------", 0x0D, 0x0A
db 0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xDB, "    ~Rummery pinvoke queen~", 0x0D, 0x0A, 0x00
;colours db "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
 ;;ps16:
   ;;lodsb        ; grab a byte from SI
 
   ;;or al, al  ; logical or AL by itself
   ;;jz .ps_done   ; if the result is zero, get out
   ;mov cl, 4
   ;;mov ah, 0
   ;mov bl, al
   
   ;shr bl, cl
   ;or bl, 0x0E
   ;or bx, 2
   ;add bx, colours
   ;mov bl, 5
   ;and ah, 0xF0 ; get the lower half
   ;dec ah
   ;cmp ah, 0x10
   ;je .setcolour
   ;lmao:
 
   ;mov bl, 5
   ;;mov ah, 0x0E
   ;;int 0x10      ; otherwise, print out the character!
 
   ;;jmp ps16
 
 ;.setcolour:
 ;mov ah, al
 ;and ah, 0x0F
 ;mov bl, ah
 ;jmp ps16
 
 ;;.ps_done:
   ;;ret

   times ((0x800) - ($ - $$)) db 0x0
